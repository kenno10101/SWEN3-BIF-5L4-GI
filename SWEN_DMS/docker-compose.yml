version: "3.9"
services:
  postgres:
    image: postgres:16
    container_name: swen_dms_postgres
    restart: always
    environment:
      POSTGRES_USER: kendi
      POSTGRES_PASSWORD: kendi
      POSTGRES_DB: dms_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  rest-server:
    build:
      context: .
      dockerfile: SWEN_DMS/Dockerfile
    container_name: swen_dms_rest_server
    restart: always
    depends_on:
      - postgres
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=dms_dev;Username=kendi;Password=kendi"
      ASPNETCORE_ENVIRONMENT: "Development"
    ports:
      - "8080:8080"
  web:
    build:
      context: ./SWEN_DMS.PL
      dockerfile: Dockerfile
    container_name: swen_dms_web
    restart: always
    ports:
      - "8081:80"
    depends_on:
      - rest-server  
    volumes:
      - type: bind
        source: ./SWEN_DMS.PL/frontend/dist/frontend  
        target: /usr/share/nginx/html
        read_only: true
  frontend-builder:
    image: node:22
    container_name: swen_dms_frontend_builder
    working_dir: /app
    environment:
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "150"
      WATCHPACK_POLLING: "true"
    command: bash -lc "npm ci && npx ng build --configuration development --watch"
    volumes:
      - type: bind
        source: ./SWEN_DMS.PL/frontend
        target: /app
      - /app/node_modules
       
volumes:
  postgres_data:
